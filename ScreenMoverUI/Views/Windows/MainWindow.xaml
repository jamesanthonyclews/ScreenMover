<ui:FluentWindow
    x:Class="ScreenMover.Views.Windows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ScreenMover.Views.Windows"
    xmlns:serv="clr-namespace:ScreenMover.Services"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:bh="http://schemas.microsoft.com/xaml/behaviors" xmlns:windows="clr-namespace:ScreenMover.ViewModels.Windows"
    Title="{Binding ViewModel.ApplicationTitle, Mode=OneWay}"
    Width="1000"
    Height="870"
    d:DataContext="{d:DesignInstance windows:MainWindowViewModel,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="650"
    d:DesignWidth="1000"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ExtendsContentIntoTitleBar="True"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    WindowBackdropType="Mica"
    WindowCornerPreference="Round"
    WindowStartupLocation="CenterScreen"
    ResizeMode="NoResize"
    mc:Ignorable="d"
    ShowInTaskbar="{Binding ViewModel.ShowInTaskbar}"
    WindowState="{Binding ViewModel.ThisWindowState}"
    >
    <Grid>
        <serv:NotifyIconWrapper NotifyRequest="{Binding ViewModel.NotifyRequest}">
            <bh:Interaction.Triggers>
                <bh:EventTrigger EventName="OpenSelected">
                    <bh:InvokeCommandAction Command="{Binding ViewModel.NotifyIconOpenCommand}"/>
                </bh:EventTrigger>
                <bh:EventTrigger EventName="ExitSelected">
                    <bh:InvokeCommandAction Command="{Binding ViewModel.NotifyIconExitCommand}"/>
                </bh:EventTrigger>
            </bh:Interaction.Triggers>
        </serv:NotifyIconWrapper>
        <ui:TitleBar Margin="0,0,0,0"
            x:Name="TitleBar"
            Title="{Binding ViewModel.ApplicationTitle}"
            Grid.Row="0"
            ShowMinimize="False"
            CloseWindowByDoubleClickOnIcon="True">
            <ui:TitleBar.Icon>
                <ui:ImageIcon Margin="32,0,0,0" Source="pack://application:,,,/Assets/ScreenMover-icon-256.png" />
            </ui:TitleBar.Icon>
        </ui:TitleBar>

        <ui:NavigationView Margin="0,0,0,0"
            x:Name="RootNavigation"
            Padding="42,0,42,0"
            BreadcrumbBar="{Binding ElementName=BreadcrumbBar}"
            FooterMenuItemsSource="{Binding ViewModel.FooterMenuItems, Mode=OneWay}"
            FrameMargin="0,0,0,0"
            IsBackButtonVisible="Collapsed"
            IsPaneToggleVisible="False"
            MenuItemsSource="{Binding ViewModel.MenuItems, Mode=OneWay}"
            PaneDisplayMode="LeftFluent"
            TitleBar="{Binding ElementName=TitleBar, Mode=OneWay}">
            <ui:NavigationView.PaneHeader>
                <Grid Height="50">
                    
                </Grid>
            </ui:NavigationView.PaneHeader>
            <ui:NavigationView.Header>
                <ui:BreadcrumbBar x:Name="BreadcrumbBar" Margin="42,24,42,20" />
            </ui:NavigationView.Header>

        </ui:NavigationView>

        <ContentPresenter x:Name="RootContentDialog" Grid.Row="0" />
    </Grid>
    <bh:Interaction.Triggers>
        <bh:EventTrigger EventName="ContentRendered">
            <bh:InvokeCommandAction Command="{Binding ViewModel.LoadedCommand}"/>
        </bh:EventTrigger>
        <bh:EventTrigger EventName="StateChanged">
            <bh:InvokeCommandAction Command="{Binding ViewModel.StateChangedCommand}"/>
        </bh:EventTrigger>
        <bh:EventTrigger EventName="Closing">
            <bh:InvokeCommandAction Command="{Binding ViewModel.ClosingCommand}" PassEventArgsToCommand="True"/>
        </bh:EventTrigger>
    </bh:Interaction.Triggers>
</ui:FluentWindow>
